plugin: oracle.oci.oci

regions:
 - us-ashburn-1

compartments:
 - compartment_ocid: "your compartment OCID"
   fetch_hosts_from_subcompartments: false


15-Sep

---
- hosts: localhost
  become: true
  tasks:
    - name : create file
      file: path=/tmp/testfile state=touch
    - name : print
      debug:
       msg: file created


Install Libraries

---
 - hosts: localhost
   become: true
   tasks:
   - name: install packages
     yum: name={{item}} state=latest
     loop:
      - podman
      - git
      - htop
   - name : print message
     debug:
       msg: "packages installed here in {{inventory_hostname}}"


- hosts: localhost
  become: true
  tasks:
  - name : install http
    yum: name=httpd state=latest
  - name: start and enable httpd
    service: name=httpd state=restarted enabled=yes
  handlers:
  - name: restart apache
    service: name=httpd state=restarted

- name: Verify Repository
  hosts: localhost
  become: yes
  tasks:
  - name: Add repository
    yum_repository:
     name: epel
     description: EPEL YUM repo
     baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/

  - name: Add multiple repositories into the same file (2/2)
    yum_repository:
       name: rpmforge
       description: RPMforge YUM repo
       file: external_repos
       baseurl: http://apt.sw.be/redhat/el7/en/$basearch/rpmforge
       mirrorlist: http://mirrorlist.repoforge.org/el7/mirrors-rpmforge
       enabled: no

 # Handler showing how to clean yum metadata cache
  - name: yum-clean-metadata
    command: yum clean metadata
    args:
      warn: no

  # Example removing a repository and cleaning up metadata cache
  - name: Remove repository (and clean up left-over metadata)
    yum_repository:
     name: epel
     state: absent

  - name: Remove repository from a specific repo file
    yum_repository:
        name: epel
        file: external_repos
        state: absent

  - name: print details
    debug: 
      msg: "Installation and uninstallation done " 


- name: Add several users
  hosts: all
  become: yes
  tasks:
  -  name: users
     ansible.builtin.user:
        name: "{{ item }}"
        state: present
        groups: "wheel"
     loop:
        - testuser11
        - testuser21
  -  name: print users
     debug:
        msg: "Print the users


- hosts: all
  connection: local
  become: yes
  tasks:
    - name: install docker
      command: yum install -y docker
    - name: start docker
      command: systemctl start docker

    - name: deploy nginx docker container
      command: docker run -d  --name testapache  -p 8085:80 httpd
    - name: list all containers
      command: docker  ps -a
    - name: verify service working
      command: curl {{ansible_hostname}}:8085
    - name: remove container
      command : docker rm -f testnginx


- name: Get namespace name
  hosts: localhost
  collections:
    - oracle.oci
  tasks:
    - name: Get namespace name
      oci_object_storage_namespace_facts:
      register: output
    - name: Print namespace name
      debug:
        msg: "{{ output }}"



- name : List summary
  collections:
    - oracle.oci
  connection: local
  hosts: localhost
  tasks:
   - name: List availability domains
     oci_identity_availability_domain_facts:
     # required
       compartment_id: "tenancy-ocid"
     register: result

   - name : print ADs
     debug:
       msg: {{ result }}

- name: Get VCN Facts
  hosts: localhost
  collections:
    - oracle.oci
  tasks:
   - name: get all VCN Facts
     oci_network_vcn_facts:
      compartment_id: "yourcompartment-ocid"
     register: vcn_facts

   - name: print all ad facts
     debug:
       msg: {{vcn_facts}}  


- name: Get VCN Facts
  hosts: localhost
  collections:
    - oracle.oci
  tasks:
   - name: Creates VCN Facts
     oci_network_vcn:
        compartment_id:
        display_name:
        dns_label:
        state: "present"
    
   - name: delete a VCN
     oci_network_vcn:
         compartment_id:
         vcn_id: "get the vcnid of the vcn which you want to delete"
         state: "absent"
